@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> _signInManager
@model SalesHelper.Models.InterfaceModels.CountertopQuotationCreateInterface
@inject SalesHelper.Services.CustomerService _customerService
@inject SalesHelper.Data.ApplicationDbContext context
@{
    var roomTypes = Enum.GetValues(typeof(CountertopQuotation.RoomTypes))
                                .Cast<CountertopQuotation.RoomTypes>()
                                .Select(e => e.GetEnumMemberAttributeValue())
                                .ToList();
    var edgeProfiles = Enum.GetValues(typeof(CountertopQuotation.EdgeProfiles))
                        .Cast<CountertopQuotation.EdgeProfiles>()
                        .Select(e => e.GetEnumMemberAttributeValue())
                        .ToList();
    var materials = Enum.GetValues(typeof(CountertopMaterial.Materials))
                        .Cast<CountertopMaterial.Materials>()
                        .Select(e => e.GetEnumMemberAttributeValue())
                        .ToList();

    var brands = context.CountertopBrandsData.Select(a => a.Brand).Distinct().ToList();

    // getting vendors for the current user with business type 2 (2 = "Stone and Countertops")
    var vendors = context.Vendor.Where(v => v.BusinessTypeId == 2 && v.AccountNumberId == _signInManager.UserManager.GetUserAsync(User).Result.AccountNumber).ToList();

    var customerId = TempData["CustomerId"];
    var customersList = _customerService.ReadAll().Where(a => a.CreatedByUserId == _signInManager.UserManager.GetUserAsync(User).Result.Id);
}
<style>
    .select2-selection {
        border-radius: 0px !important;
    }

    .input-group > .select2-container--default {
        width: auto;
        flex: 1 1 auto;
    }

    .input-group > .select2-container--default .select2-selection--single {
        height: 100%;
        line-height: inherit;
    }
</style>
<div class="content-wrapper">
    <div class="content-header row">
        <div class="content-header-left col-md-6 col-12 mb-2">
            <h3 class="content-header-title mb-0">New Countertop Quotation</h3>
        </div>
    </div>
    <div class="content-body">

        <div class="card">
            <div class="card-header">
                <h4 class="card-title text-primary">Countertop Quote Details</h4>
            </div>
            <div class="card-content collapse show">
                <div class="card-body">
                    <form class="form" id="CountertopQuotationForm">

                        <div class="hidden">
                            <input asp-for="CountertopQuotation.CreatedDateTime" value="@DateTime.Now.ToString("yyyy-MM-ddThh:mm")" />
                            <input asp-for="CountertopQuotation.ModifiedDateTime" value="@DateTime.Now.ToString("yyyy-MM-ddThh:mm")" />
                            <input asp-for="CountertopQuotation.CreatedByUserId" value="@_signInManager.UserManager.GetUserAsync(User).Result.Id" />
                        </div>

                        <div class="form-body">

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Customer Name <span class="required">*</span></label>
                                        <div class="input-group">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text square">
                                                    <i class="feather icon-user"></i>
                                                </span>
                                            </div>
                                            <select class="form-control square" asp-for="CountertopQuotation.CustomerId" data-placeholder="Select a Customer" required></select>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Quote Name <span class="required">*</span></label>
                                        <input class="form-control square" asp-for="CountertopQuotation.Name" placeholder="Quote Name" required />
                                    </div>
                                </div>
                            </div>

                            <h4 class="form-section"><i class="feather icon-file-text"></i> Quote Details</h4>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Room Type</label>
                                        <select class="form-control square" asp-for="CountertopQuotation.RoomType">
                                            <option selected disabled>Choose Room Type</option>
                                            @foreach (var item in roomTypes)
                                            {
                                                <option value="@item">@item</option>
                                            }
                                        </select>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Edge Profile</label>
                                        <select class="form-control square" asp-for="CountertopQuotation.EdgeProfile">
                                            <option selected disabled>Choose Edge Profile</option>
                                            @foreach (var item in edgeProfiles)
                                            {
                                                <option value="@item">@item</option>
                                            }
                                        </select>
                                    </div>
                                </div>
                            </div>


                            <div class="row mb-1">
                                <div class="col-md-3">
                                    <fieldset>
                                        <div class="custom-control custom-checkbox">
                                            <input type="checkbox" asp-for="CountertopQuotation.MiteredEdge" class="custom-control-input" id="MiteredEdge" />
                                            <label class="custom-control-label" for="MiteredEdge">Mitered Edge</label>
                                        </div>
                                    </fieldset>
                                    <fieldset>
                                        <div class="custom-control custom-checkbox">
                                            <input type="checkbox" asp-for="CountertopQuotation.MiteredEdgeOnIsland" class="custom-control-input" id="MiteredEdgeOnIsland" />
                                            <label class="custom-control-label" for="MiteredEdgeOnIsland">Mitered Edge On Island</label>
                                        </div>
                                    </fieldset>
                                    <fieldset>
                                        <div class="custom-control custom-checkbox">
                                            <input type="checkbox" asp-for="CountertopQuotation.WaterfallOnIsland" class="custom-control-input" id="WaterfallOnIsland" />
                                            <label class="custom-control-label" for="WaterfallOnIsland">Walterfall On Island</label>
                                        </div>
                                    </fieldset>
                                </div>
                                <div class="col-md-3">
                                    <fieldset>
                                        <div class="custom-control custom-checkbox">
                                            <input type="checkbox" asp-for="CountertopQuotation.FarmhouseSink" class="custom-control-input" id="FarmhouseSink" />
                                            <label class="custom-control-label" for="FarmhouseSink">Farmhouse Sink</label>
                                        </div>
                                    </fieldset>
                                    <fieldset>
                                        <div class="custom-control custom-checkbox">
                                            <input type="checkbox" asp-for="CountertopQuotation.IslandPrepSink" class="custom-control-input" id="IslandPrepSink" />
                                            <label class="custom-control-label" for="IslandPrepSink">Island Prep Sink</label>
                                        </div>
                                    </fieldset>
                                </div>

                                <div class="col-md-3">
                                    <fieldset>
                                        <div class="custom-control custom-checkbox">
                                            <input type="checkbox" asp-for="CountertopQuotation.Cooktop" class="custom-control-input" id="Cooktop" />
                                            <label class="custom-control-label" for="Cooktop">Cooktop</label>
                                        </div>
                                    </fieldset>
                                    <fieldset>
                                        <div class="custom-control custom-checkbox">
                                            <input type="checkbox" asp-for="CountertopQuotation.Rangetop" class="custom-control-input" id="Rangetop" />
                                            <label class="custom-control-label" for="Rangetop">Rangetop</label>
                                        </div>
                                    </fieldset>
                                </div>
                                <div class="col-md-3">
                                    <fieldset>
                                        <div class="custom-control custom-checkbox">
                                            <input type="checkbox" asp-for="CountertopQuotation.FullBacksplash" class="custom-control-input" id="FullBacksplash" />
                                            <label class="custom-control-label" for="FullBacksplash">Full Backsplash</label>
                                        </div>
                                    </fieldset>
                                    <fieldset>
                                        <div class="custom-control custom-checkbox">
                                            <input type="checkbox" asp-for="CountertopQuotation.FourIncBacksplash" class="custom-control-input" id="FourInchBacksplash" />
                                            <label class="custom-control-label" for="FourInchBacksplash">4" Backsplash</label>
                                        </div>
                                    </fieldset>
                                </div>
                            </div>

                            <div class="form-group">
                                <label>Estimate Square Feet</label>
                                <input class="form-control square" asp-for="CountertopQuotation.EstimateSquareFeet" placeholder="Estimate Square Feet" />
                            </div>

                            <div class="d-flex justify-content-between align-content-lg-end">
                                <h4 class="card-title text-primary">
                                    Material & Price
                                </h4>
                                <div class="form-group">
                                    <button type="button" class="btn btn-primary" id="btnAddMaterial">
                                        <i class="feather icon-plus"></i> Add New Material
                                    </button>
                                </div>
                            </div>
                            <div class="card-content collapse show">
                                <div class="card-body">
                                    <div class="table-responsive">
                                        <table class="table" id="materialTable">
                                            <thead>
                                                <tr>
                                                    <th>#</th>
                                                    <th>Material</th>
                                                    <th>Brand</th>
                                                    <th>Color</th>
                                                    <th>Vendor</th>
                                                    <th>Vendor Rate</th>
                                                    <th>Price Quote</th>
                                                    <th>Action</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>

                        </div>
                        <div class="form-actions text-center">
                            <a asp-controller="Quotations" asp-action="QuotationsListView" class="width-150 btn btn-warning"><i class="feather icon-x"></i> Cancel</a>
                            <button type="submit" class="width-150 btn btn-primary"><i class="feather icon-save"></i> Save Quote</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

</div>

@* Creating a model pop up for adding customer *@
<!-- Modal for adding customer -->
<div class="modal fade text-left" id="AddCustomerModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-sm modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header bg-primary white">
                <h4 class="modal-title form-section"><i class="feather icon-user-plus"></i> Add New Customer</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form class="form" id="AddCustomerForm" method="post">
                <div class="modal-body">
                    <label>Customer Name *</label>
                    <div class="form-group position-relative has-icon-left">
                        <input id="customerName" type="text" class="form-control" placeholder="Jane Doe" required>
                        <div class="form-control-position">
                            <i class="feather icon-user primary"></i>
                        </div>
                    </div>

                    <label>Phone *</label>
                    <div class="form-group position-relative has-icon-left">
                        <input id="customerPhone" type="text" class="form-control" placeholder="452-365-7845" required>
                        <div class="form-control-position">
                            <i class="feather icon-phone primary"></i>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn grey btn-outline-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>

    // submit AddCustomerForm form
    $("#AddCustomerForm").submit(function (e) {
        e.preventDefault();
        var customerName = $("#customerName").val();
        var customerPhone = $("#customerPhone").val();
        $.ajax({
            type: "POST",
            url: "/Customers/AddCustomerFromSearchBar",
            data: { name: customerName, phone: customerPhone },
            success: function (data) {
                // close the modal
                $("#AddCustomerModal").modal("hide");
                // refresh the customer select list
                var customerId = data.data.id;
                var customerName = data.data.firstName + " " + data.data.lastName;
                debugger
                var newOption = new Option(customerName, customerId, true, true);
                $("#CountertopQuotation_CustomerId").append(newOption).trigger("change");
            }
        });
    });

    function ShowCustomer_Canvas() {
        // get the current text that is inside select2 search input
        var searchText = $("#CountertopQuotation_CustomerId").data("select2").dropdown.$search.val();
        // show customer modal pop up
        $("#AddCustomerModal").modal("show");
        // set customer name input field equal to searchText
        $("#customerName").val(searchText);
        // close select2 list
        $("#CountertopQuotation_CustomerId").select2("close");
    }

    $(document).ready(function () {
        // For Customers Select List
        var customerList = @Html.Raw(Json.Serialize(customersList));
        $("#CountertopQuotation_CustomerId").select2({
            placeholder: $(this).data("placeholder"),
            language: {
                noResults: function () {
                    return `<button style="width: 100%" type="button"
                                class="btn btn-primary"
                                onClick='ShowCustomer_Canvas()'><i class="feather icon-plus"></i> Add New Customer</button>
                                </li>`;
                }
            },
            escapeMarkup: function (markup) {
                return markup;
            },
            width: $(this).data('width') ? $(this).data('width') : $(this).hasClass('w-100') ? '100%' : 'style',
            data: customerList.map(function (customer) {
                return {
                    id: customer.id,
                    text: customer.firstName + " " + customer.lastName
                };
            })
        });
        $("#CountertopQuotation_CustomerId").val(@Html.Raw(customerId != null ? $"\"{customerId}\"" : "null")).trigger("change");

        // Submitting Countertop Quotation Form with Material List
        $("#CountertopQuotationForm").submit(function (e) {
            e.preventDefault();

            var countertopQuotationData = {};
            $(this).find("input, select").each(function () {
                if (this.type === "checkbox") {
                    if (this.checked) {
                        countertopQuotationData[this.name.split(".")[1]] = this.checked;
                    }
                } else if (this.type != "hidden") {
                    countertopQuotationData[this.name.split(".")[1]] = $(this).val();
                }
            });

            var data = {
                countertopQuotation: countertopQuotationData,
                countertopMaterials: GetMaterials()
            };

            $.ajax({
                url: "/Quotations/CreateCountertopQuotation",
                type: "POST",
                data: {
                    quotation: data
                },
                success: function (data) {
                    if (data.message == "success") {
                        toastr.success(data.result, "Success", { "progressBar": true });
                        setTimeout(function () {
                            window.location.href = "/Quotations/QuotationsListView";
                        }, 4000);
                    } else {
                        toastr.info(data.result, "Information", { "progressBar": true });
                    }
                },
                error: function (error) {
                    toastr.error(error, 'Error!', { "progressBar": true });
                }
            });
        });

        $('#btnAddMaterial').on('click', function () {
            addRow();
        });

        function GetMaterials() {
            var listOfMaterials = new Array();
            $("#materialTable").find("tr:gt(0)").each(function () {
                var material = $(this).find("td:eq(1)").find("select").val();
                var brand = $(this).find("td:eq(2)").find("input").val();
                var color = $(this).find("td:eq(3)").find("input").val();
                var vendorId = $(this).find("td:eq(4)").find("select").val();
                var vendorRate = $(this).find("td:eq(5)").find("input").val();
                var priceQuote = $(this).find("td:eq(6)").find("input").val();

                var CountertopMaterial = {};

                CountertopMaterial.material = material;
                CountertopMaterial.brand = brand;
                CountertopMaterial.color = color;
                CountertopMaterial.vendorId = vendorId;
                CountertopMaterial.vendorRate = vendorRate;
                CountertopMaterial.priceQuote = priceQuote;

                listOfMaterials.push(CountertopMaterial);
            });
            return listOfMaterials;
        }

        // initialing colorDatalistId for dynamic datalist id
        var colorDatalistId = 0;

        // Function to add row in table
        function addRow() {
            // increment colorDatalistId
            colorDatalistId++;
            var newRow = `
                        <tr>
                            <td><b class="item-number"></b></td>
                            <td>
                                <select class="form-control square material-select" data-placeholder="Select Material">
                                    @foreach (var item in materials)
                                    {
                                        <option value="@item">@item</option>
                                    }
                                </select>
                            </td>
                            <td>
                                <input type="search" list="brands" class="form-control square brand-select" placeholder="Brand" />
                                <datalist id="brands">
                                    @foreach (var item in brands)
                                    {
                                        <option value="@item" />
                                    }
                                </datalist>
                            </td>
                            <td>
                                <input type="search" list="colors_${colorDatalistId}" class="form-control square color-input" placeholder="Color" />
                                <datalist id="colors_${colorDatalistId}" class="color-select">
                                </datalist>
                            </td>
                            <td>
                                <select class="form-control square vendor-select" data-placeholder="Select Vendor">
                                    @foreach (var item in vendors)
                                    {
                                        <option value="@item.VendorId">@item.CompanyName</option>
                                    }
                                </select>
                            </td>
                            <td>
                                <input type="number" class="form-control square" placeholder="Vendor Rate" />
                            </td>
                            <td>
                                <input type="number" class="form-control square" placeholder="Price Quote" />
                            </td>
                            <td style="vertical-align:middle;">
                                <button class="btn btn-sm btn-primary duplicate-row"><i class="feather icon-copy" title="Duplicate Item"></i></button>
                                <button class="btn btn-sm btn-danger delete-row"><i class="feather icon-trash" title="Delete Item"></i></button>
                            </td>
                        </tr>
                    `;

            $('#materialTable tbody').append(newRow);

            // convert newRow to HTML tr element
            var addedRow = $('#materialTable tbody tr:last-child');

            // get the brand select element from the added row
            var materialSelect = addedRow.find('.material-select');
            var brandSelect = addedRow.find('.brand-select');
            var colorSelect = addedRow.find('.color-select');
            var vendorSelect = addedRow.find('.vendor-select');

            materialSelect.select2({
                placeholder: $(this).data("placeholder"),
                width: "100%"
            });
            materialSelect.val(null).trigger('change');

            vendorSelect.select2({
                placeholder: $(this).data("placeholder"),
                width: "100%"
            });
            vendorSelect.val(null).trigger('change');


            // Event listener for brand select change
            brandSelect.on('change', function () {
                // empty the value of color input
                addedRow.find('.color-input').val('');
                var selectedBrand = $(this).val();
                // Make AJAX request to fetch colors based on selected brand
                $.ajax({
                    url: '/Quotations/GetColorsForBrand', // Replace with your endpoint to fetch colors
                    method: 'GET',
                    data: { brand: selectedBrand },
                    success: function (colors) {
                        // clear the color datalist first
                        colorSelect.empty();
                        // append the colors to the color datalist
                        colors.forEach(function (color) {
                            colorSelect.append(`<option value="${color}" />`);
                        });
                    },
                    error: function (xhr, status, error) {
                        alert(error);
                    }
                });
            });

            // Update item numbers
            updateItemNumbers();
        }

        // Function to update item numbers
        function updateItemNumbers() {
            $('.item-number').each(function (index) {
                $(this).text(index + 1);
            });
        }

        // Remove row when the "Delete Item" button is clicked
        $('#materialTable').on('click', '.delete-row', function (event) {
            // prevent form submission
            event.preventDefault();
            $(this).closest('tr').remove();
            updateItemNumbers();
        });

        // Duplicate row when the "Duplicate Item" button is clicked
        $('#materialTable').on('click', '.duplicate-row', function (event) {
            // prevent form submission
            event.preventDefault();
            var rowToDuplicate = $(this).closest('tr');
            var clonedRow = rowToDuplicate.clone();

            updateColorDatalistId(clonedRow);

            rowToDuplicate.after(clonedRow);
            updateItemNumbers();
        });

        // update id of color datalist
        function updateColorDatalistId(clonedRow) {

            const itemNumberElement = clonedRow.find('.item-number');
            const newItemNumber = parseInt(itemNumberElement.text().replace('Item ', '')) + 1;

            const colorDatalist = clonedRow.find('.color-select');
            const colorInput = clonedRow.find('.color-input');
            colorDatalist.attr('id', `colors_${newItemNumber}`);
            colorInput.attr('list', `colors_${newItemNumber}`);

            const brandSelect = clonedRow.find('.brand-select');
            brandSelect.on('change', function () {
                // empty the value of color input
                colorInput.val('');
                const selectedBrand = $(this).val();
                // Make AJAX request to fetch colors based on selected brand
                $.ajax({
                    url: '/Quotations/GetColorsForBrand',
                    method: 'GET',
                    data: { brand: selectedBrand },
                    success: function (colors) {
                        // clear the color datalist first
                        colorDatalist.empty();
                        // append the colors to the color datalist
                        colors.forEach(function (color) {
                            colorDatalist.append(`<option value="${color}" />`);
                        });
                    },
                    error: function (xhr, status, error) {
                        alert(error);
                    }
                });
            });
        }
    });
</script>