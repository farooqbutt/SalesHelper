@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> _signInManager
@model SalesHelper.Models.InterfaceModels.CountertopQuotationCreateInterface
@inject SalesHelper.Services.CustomerService _customerService
@inject SalesHelper.Data.ApplicationDbContext context
@{
    var roomTypes = Enum.GetValues(typeof(CountertopQuotation.RoomTypes))
                                .Cast<CountertopQuotation.RoomTypes>()
                                .Select(e => e.GetEnumMemberAttributeValue())
                                .ToList();
    var edgeProfiles = Enum.GetValues(typeof(CountertopQuotation.EdgeProfiles))
                        .Cast<CountertopQuotation.EdgeProfiles>()
                        .Select(e => e.GetEnumMemberAttributeValue())
                        .ToList();
    var materials = Enum.GetValues(typeof(CountertopMaterial.Materials))
                        .Cast<CountertopMaterial.Materials>()
                        .Select(e => e.GetEnumMemberAttributeValue())
                        .ToList();

    var brands = context.CountertopBrandsData.Select(a => a.Brand).Distinct().ToList();

    // getting vendors for the current user with business type 2 (2 = "Stone and Countertops")
    var vendors = context.Vendor.Where(v => v.BusinessTypeId == 2 && v.AccountNumberId == _signInManager.UserManager.GetUserAsync(User).Result.AccountNumber).ToList();

    var customerId = Model.CountertopQuotation.CustomerId;
    var customersList = _customerService.ReadAll().Where(a => a.CreatedByUserId == _signInManager.UserManager.GetUserAsync(User).Result.Id);
}
<style>
    .select2-selection {
        border-radius: 0px !important;
    }

    .input-group > .select2-container--default {
        width: auto;
        flex: 1 1 auto;
    }

    .input-group > .select2-container--default .select2-selection--single {
        height: 100%;
        line-height: inherit;
        padding: 0.5rem 1rem;
        }

    #materialTable td {
        vertical-align: middle;
    }
</style>
<div class="content-wrapper">
    <div class="content-header row">
        <div class="content-header-left col-md-6 col-12 mb-2">
            <h3 class="content-header-title mb-0">Edit Countertop Quotation</h3>
        </div>
    </div>
    <div class="content-body">

        <div class="card">
            <div class="card-header">
                <h4 class="card-title text-primary">Countertop Quote Details</h4>
            </div>
            <div class="card-content collapse show">
                <div class="card-body">
                    <form class="form" id="CountertopQuotationForm">
                        <div class="form-body">

                            <div class="hidden">
                                <input asp-for="CountertopQuotation.Id" />
                                <input asp-for="CountertopQuotation.CustomerId" />
                                <input asp-for="CountertopQuotation.CreatedDateTime" />
                                <input asp-for="CountertopQuotation.ModifiedDateTime" value="@DateTime.Now.ToString("yyyy-MM-ddThh:mm")" />
                                <input asp-for="CountertopQuotation.CreatedByUserId" />
                            </div>

                            <div class="form-group">
                                <label>Customer Name <span class="required">*</span></label>
                                <div class="input-group has-icon-left">
                                    <input class="form-control square" value="@Model.CountertopQuotation.CustomerIdFk.FirstName @Model.CountertopQuotation.CustomerIdFk.LastName"
                                           title="Customer can not be changed" disabled />
                                    <div class="form-control-position">
                                        <i class="feather icon-user primary"></i>
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                <label>Quote Name <span class="required">*</span></label>
                                <input class="form-control square" asp-for="CountertopQuotation.Name" placeholder="Quote Name" required />
                            </div>

                            <h4 class="form-section"><i class="feather icon-file-text"></i> Quote Details</h4>

                            <div class="form-group">
                                <label>Room Type</label>
                                <select class="form-control square" asp-for="CountertopQuotation.RoomType">
                                    <option selected disabled>Choose Room Type</option>
                                    @foreach (var item in roomTypes)
                                    {
                                        <option value="@item">@item</option>
                                    }
                                </select>
                            </div>

                            <div class="form-group">
                                <label>Edge Profile</label>
                                <select class="form-control square" asp-for="CountertopQuotation.EdgeProfile">
                                    <option selected disabled>Choose Edge Profile</option>
                                    @foreach (var item in edgeProfiles)
                                    {
                                        <option value="@item">@item</option>
                                    }
                                </select>
                            </div>

                            <div class="row mb-1">
                                <div class="col-md-3">
                                    <fieldset>
                                        <div class="custom-control custom-checkbox">
                                            <input type="checkbox" asp-for="CountertopQuotation.MiteredEdge" class="custom-control-input" id="MiteredEdge" />
                                            <label class="custom-control-label" for="MiteredEdge">Mitered Edge</label>
                                        </div>
                                    </fieldset>
                                    <fieldset>
                                        <div class="custom-control custom-checkbox">
                                            <input type="checkbox" asp-for="CountertopQuotation.MiteredEdgeOnIsland" class="custom-control-input" id="MiteredEdgeOnIsland" />
                                            <label class="custom-control-label" for="MiteredEdgeOnIsland">Mitered Edge On Island</label>
                                        </div>
                                    </fieldset>
                                    <fieldset>
                                        <div class="custom-control custom-checkbox">
                                            <input type="checkbox" asp-for="CountertopQuotation.WaterfallOnIsland" class="custom-control-input" id="WaterfallOnIsland" />
                                            <label class="custom-control-label" for="WaterfallOnIsland">Walterfall On Island</label>
                                        </div>
                                    </fieldset>
                                </div>
                                <div class="col-md-3">
                                    <fieldset>
                                        <div class="custom-control custom-checkbox">
                                            <input type="checkbox" asp-for="CountertopQuotation.FarmhouseSink" class="custom-control-input" id="FarmhouseSink" />
                                            <label class="custom-control-label" for="FarmhouseSink">Farmhouse Sink</label>
                                        </div>
                                    </fieldset>
                                    <fieldset>
                                        <div class="custom-control custom-checkbox">
                                            <input type="checkbox" asp-for="CountertopQuotation.IslandPrepSink" class="custom-control-input" id="IslandPrepSink" />
                                            <label class="custom-control-label" for="IslandPrepSink">Island Prep Sink</label>
                                        </div>
                                    </fieldset>
                                </div>

                                <div class="col-md-3">
                                    <fieldset>
                                        <div class="custom-control custom-checkbox">
                                            <input type="checkbox" asp-for="CountertopQuotation.Cooktop" class="custom-control-input" id="Cooktop" />
                                            <label class="custom-control-label" for="Cooktop">Cooktop</label>
                                        </div>
                                    </fieldset>
                                    <fieldset>
                                        <div class="custom-control custom-checkbox">
                                            <input type="checkbox" asp-for="CountertopQuotation.Rangetop" class="custom-control-input" id="Rangetop" />
                                            <label class="custom-control-label" for="Rangetop">Rangetop</label>
                                        </div>
                                    </fieldset>
                                </div>
                                <div class="col-md-3">
                                    <fieldset>
                                        <div class="custom-control custom-checkbox">
                                            <input type="checkbox" asp-for="CountertopQuotation.FullBacksplash" class="custom-control-input" id="FullBacksplash" />
                                            <label class="custom-control-label" for="FullBacksplash">Full Backsplash</label>
                                        </div>
                                    </fieldset>
                                    <fieldset>
                                        <div class="custom-control custom-checkbox">
                                            <input type="checkbox" asp-for="CountertopQuotation.FourIncBacksplash" class="custom-control-input" id="FourInchBacksplash" />
                                            <label class="custom-control-label" for="FourInchBacksplash">4" Backsplash</label>
                                        </div>
                                    </fieldset>
                                </div>
                            </div>

                            <div class="form-group">
                                <label>Estimate Square Feet</label>
                                <input class="form-control square" asp-for="CountertopQuotation.EstimateSquareFeet" placeholder="Estimate Square Feet" />
                            </div>

                            <div class="d-flex justify-content-between align-content-lg-end">
                                <h4 class="card-title text-primary">
                                    Material & Price
                                </h4>
                            </div>
                            <div class="row" style="align-items:center;">
                                <div class="col-md-3">
                                    <img id="colorImage" title="Color Image" alt="Color Image" src="~/images/logo/SalesHelperLogo.png" width="220" height="218.75" />
                                </div>
                                <div class="col-md-3">
                                    <select id="materialSelect" class="form-control square" data-placeholder="Choose Material">
                                        @foreach (var item in materials)
                                        {
                                            <option value="@item">@item</option>
                                        }
                                    </select>
                                </div>
                                <div class="col-md-3">
                                    <select id="brandSelect" class="form-control square" data-placeholder="Choose Brand"></select>
                                </div>
                                <div class="col-md-3">
                                    <select id="colorSelect" class="form-control square" data-placeholder="Choose Color"></select>
                                </div>
                            </div>
                            <div class="form-group float-right" style="margin-top:-41px;">
                                <button type="button" class="btn btn-primary" id="btnAddMaterial">
                                    <i class="feather icon-plus"></i> Add Material
                                </button>
                            </div>

                            <div class="card-content collapse show">
                                <div class="card-body">
                                    <div class="table-responsive">
                                        <table class="table" id="materialTable">
                                            <thead>
                                                <tr>
                                                    <th>#</th>
                                                    <th>Material</th>
                                                    <th>Brand</th>
                                                    <th>Color</th>
                                                    <th>Vendor</th>
                                                    <th>Vendor Rate</th>
                                                    <th>Price Quote</th>
                                                    <th>Action</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var item in Model.CountertopMaterials)
                                                {
                                                    var index = Model.CountertopMaterials.IndexOf(item) + 1;
                                                    <tr>
                                                        <td><b class="item-number">@index</b></td>
                                                        <td>@item.Material</td>
                                                        <td>@item.Brand</td>
                                                        <td>@item.Color</td>
                                                        <td>
                                                            <select class="form-control square vendor-select" data-placeholder="Select Vendor">
                                                                @foreach (var vendor in vendors)
                                                                {
                                                                    if(vendor.VendorId == item.VendorId)
                                                                    {
                                                                        <option value="@vendor.VendorId" selected>@vendor.CompanyName</option>
                                                                    }
                                                                    else
                                                                    {
                                                                        <option value="@vendor.VendorId">@vendor.CompanyName</option>
                                                                    }
                                                                }
                                                            </select>
                                                        </td>
                                                        <td>
                                                            <input type="number" class="form-control square" placeholder="Vendor Rate" value="@item.VendorRate" />
                                                        </td>
                                                        <td>
                                                            <input type="number" class="form-control square" placeholder="Price Quote" value="@item.PriceQuote" />
                                                        </td>
                                                        <td style="vertical-align:middle;">
                                                            <button class=" btn btn-sm btn-danger delete-row">
                                                                <i class="feather icon-trash" title="Delete Item"></i>
                                                            </button>
                                                        </td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>

                        </div>
                        <div class="form-actions text-center">
                            <a asp-controller="Quotations" asp-action="QuotationsListView" class="width-150 btn btn-warning"><i class="feather icon-x"></i> Cancel</a>
                            <button type="submit" class="width-150 btn btn-primary"><i class="feather icon-save"></i> Update Quote</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

</div>

<script>

    $(document).ready(function () {

        // material select initialization
        $("#materialSelect").select2({
            placeholder: $(this).data("placeholder"),
            width: "100%",
            language: {
                "noResults": function () {
                    return "No Material Found!";
                }
            },
            escapeMarkup: function (markup) {
                return markup;
            }
        });
        // clearing material select for the first time
        $("#materialSelect").val(null).trigger('change');

        // on change event of material select
        $("#materialSelect").on('change', function () {
            // empty the value of brand
            $("#brandSelect").val('');
            // empty the value of color input
            $("#colorSelect").val('');
            // get the value of selected material
            var selectedMaterial = $(this).val();
            // Make AJAX request to fetch brands based on selected material
            $.ajax({
                url: '/Quotations/GetBrandsForMaterial',
                method: 'GET',
                data: { material: selectedMaterial },
                success: function (brands) {
                    // clear the brands selection
                    $("#brandSelect").empty();
                    // append the brands to the brand select
                    brands.forEach(function (brand) {
                        $("#brandSelect").append(`<option value="${brand}">${brand}</option>`);
                    });
                    // clearing value for the first time of brands select
                    $("#brandSelect").val(null).trigger('change');
                    // clear the color datalist first
                    $("#colorSelect").empty();
                },
                error: function (xhr, status, error) {
                    alert(error);
                }
            });
        });

        // brand select initialization
        $("#brandSelect").select2({
            placeholder: $(this).data("placeholder"),
            width: "100%",
            language: {
                "noResults": function () {
                    return "<button style='width:100%' class='btn btn-primary'><i class='feather icon-plus'></i> New Brand</a>";
                }
            },
            escapeMarkup: function (markup) {
                return markup;
            }
        });

        // color select initialization
        $("#colorSelect").select2({
            placeholder: $(this).data("placeholder"),
            width: "100%",
            language: {
                "noResults": function () {
                    return "No Color Found!";
                }
            },
            ajax: {
                url: "/Quotations/GetColorsForBrand",
                contentType: "application/json; charset=utf-8",
                data: function (params) {
                    var query = {
                        brand: $("#brandSelect").val(),
                        color: params.term
                    };
                    return query;
                },
                processResults: function (result) {
                    return {
                        results: $.map(result, function (item) {
                            return {
                                id: item.id,
                                text: item.colorName,
                                imageUrl: item.imageUrl,
                                html: `<div style="display:flex;">
                                                <div>
                                                    <img src="/images/LoadingColorImg.gif" alt="" data-actual-image="${item.imageUrl}" style="height:70px;width:70px;object-fit:cover;" class="lazy img-rounded img-responsive" />
                                                </div>
                                                <div style="padding-left:10px;">
                                                    <div style="font-size: 1.2em">${item.colorName}</div>
                                                    <div>Thickness = ${item.thickness || 'N/A'}, Slab Size = ${item.slabSize || 'N/A'}</div>
                                                </div>
                                            </div>`,
                            }
                        })
                    }
                }
            },
            templateResult: template,
            escapeMarkup: function (markup) {
                return markup;
            }
        });

        function template(data) {
            return data.html;
        }

        $(".vendor-select").select2({
            placeholder: $(this).data("placeholder"),
            width: "100%",
            language: {
                "noResults": function () {
                    return "No Vendor Found!";
                }
            },
            escapeMarkup: function (markup) {
                return markup;
            }
        });

        var selectedColor = null;
        // on change event of color select
        $("#colorSelect").on('change', function (event) {
            const colorImage = $(this).select2("data")[0].imageUrl;
            const colorName = $(this).select2("data")[0].text;
            $("#colorImage").attr("src", colorImage);
            selectedColor = colorName;
        });

        // Add a hover event listener to load the actual image /// replicating lazy loading of images.
        $(document).on('mouseenter', '.select2-results__option', function () {
            var actualImage = $(this).find('img').data('actual-image');
            if (actualImage) {
                $(this).find('img').attr('src', actualImage);
            }
        });


        // Submitting Countertop Quotation Form with Material List
        $("#CountertopQuotationForm").submit(function (e) {
            e.preventDefault();

            var countertopQuotationData = {};
            $(this).find("input, select").each(function () {
                if (this.type === "checkbox") {
                    if (this.checked) {
                        countertopQuotationData[this.name.split(".")[1]] = this.checked;
                    }
                } else if (this.type != "hidden") {
                    countertopQuotationData[this.name.split(".")[1]] = $(this).val();
                }
            });

            var data = {
                countertopQuotation: countertopQuotationData,
                countertopMaterials: GetMaterials()
            };

            $.ajax({
                url: "/Quotations/EditCountertopQuotation",
                type: "POST",
                data: {
                    quote: data
                },
                success: function (data) {
                    if (data.message == "success") {
                        toastr.success(data.result, "Success", { "progressBar": true });
                        setTimeout(function () {
                            window.location.href = "/Quotations/QuotationsListView";
                        }, 4000);
                    } else {
                        toastr.info(data.result, "Information", { "progressBar": true });
                    }
                },
                error: function (error) {
                    toastr.error(error, 'Error!', { "progressBar": true });
                }
            });
        });

        $('#btnAddMaterial').on('click', function () {
            var data = {
                material: $("#materialSelect").val(),
                brand: $("#brandSelect").val(),
                color: selectedColor
            }
            addRow(data);
        });

        function GetMaterials() {
            var listOfMaterials = new Array();
            $("#materialTable").find("tr:gt(0)").each(function () {
                var material = $(this).find("td:eq(1)").text().trim();
                var brand = $(this).find("td:eq(2)").text().trim();
                var color = $(this).find("td:eq(3)").text().trim();
                var vendorId = $(this).find("td:eq(4)").find("select").val();
                var vendorRate = $(this).find("td:eq(5)").find("input").val();
                var priceQuote = $(this).find("td:eq(6)").find("input").val();

                var CountertopMaterial = {};

                CountertopMaterial.material = material;
                CountertopMaterial.brand = brand;
                CountertopMaterial.color = color;
                CountertopMaterial.vendorId = vendorId;
                CountertopMaterial.vendorRate = vendorRate;
                CountertopMaterial.priceQuote = priceQuote;

                listOfMaterials.push(CountertopMaterial);
            });
            return listOfMaterials;
        }

        // initialing id_indexer for dynamic ids generation
        var id_indexer = 0;

        // Function to add row in table
        function addRow(data) {
            // increment id_indexer
            id_indexer++;
            if (data.material == null) {
                toastr.warning("Please select a material first!", "Warning!", { "progressBar": true });
                return;
            }
            if (data.brand == null) {
                toastr.warning("Please select a brand first!", "Warning!", { "progressBar": true });
                return;
            }
            if (data.color == null) {
                toastr.warning("Please select a color first!", "Warning!", { "progressBar": true });
                return;
            }
            var newRow = `
                                <tr>
                                    <td><b class="item-number"></b></td>
                                    <td>${data.material}</td>
                                    <td>${data.brand}</td>
                                    <td>${data.color}</td>
                                    <td>
                                        <select class="form-control square vendor-select" data-placeholder="Select Vendor">
                                            @foreach (var item in vendors)
                                            {
                                                <option value="@item.VendorId">@item.CompanyName</option>
                                            }
                                        </select>
                                    </td>
                                    <td>
                                        <input type="number" class="form-control square" placeholder="Vendor Rate" />
                                    </td>
                                    <td>
                                        <input type="number" class="form-control square" placeholder="Price Quote" />
                                    </td>
                                    <td style="vertical-align:middle;">
                                        <button class="btn btn-sm btn-danger delete-row"><i class="feather icon-trash" title="Delete Item"></i></button>
                                    </td>
                                </tr>
                            `;

            $('#materialTable tbody').append(newRow);

            // // convert newRow to HTML tr element
            var addedRow = $('#materialTable tbody tr:last-child');
            var vendorSelect = addedRow.find('.vendor-select');

            // Update item numbers
            updateItemNumbers();

            vendorSelect.select2({
                placeholder: $(this).data("placeholder"),
                width: "100%",
                language: {
                    "noResults": function () {
                        return "No Vendor Found!";
                    }
                },
                escapeMarkup: function (markup) {
                    return markup;
                }
            });
            // clearing vendor select for first time
            vendorSelect.val(null).trigger('change');
        }

        // Function to update item numbers
        function updateItemNumbers() {
            $('.item-number').each(function (index) {
                $(this).text(index + 1);
            });
        }

        // Remove row when the "Delete Item" button is clicked
        $('#materialTable').on('click', '.delete-row', function (event) {
            // prevent form submission
            event.preventDefault();
            $(this).closest('tr').remove();
            updateItemNumbers();
        });
    });
</script>